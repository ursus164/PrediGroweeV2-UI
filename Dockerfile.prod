FROM node:18-alpine AS base

# Build stage
FROM base AS builder
WORKDIR /app
COPY package*.json ./
RUN npm ci
COPY . .

# Add build args for env variables
ARG NEXT_PUBLIC_GOOGLE_CLIENT_ID
ARG NEXT_PUBLIC_AUTH_SERVICE_URL
ARG NEXT_PUBLIC_QUIZ_SERVICE_URL
ARG NEXT_PUBLIC_STATS_SERVICE_URL
ARG NEXT_PUBLIC_IMAGES_SERVICE_URL
ARG NEXT_PUBLIC_ADMIN_SERVICE_URL
ARG AUTH_SERVICE_INTERNAL_URL
ARG NEXT_PUBLIC_RECAPTCHA_SITE_KEY

# Set them as env variables for build time
ENV NEXT_PUBLIC_GOOGLE_CLIENT_ID=$NEXT_PUBLIC_GOOGLE_CLIENT_ID
ENV NEXT_PUBLIC_AUTH_SERVICE_URL=$NEXT_PUBLIC_AUTH_SERVICE_URL
ENV NEXT_PUBLIC_QUIZ_SERVICE_URL=$NEXT_PUBLIC_QUIZ_SERVICE_URL
ENV NEXT_PUBLIC_STATS_SERVICE_URL=$NEXT_PUBLIC_STATS_SERVICE_URL
ENV NEXT_PUBLIC_IMAGES_SERVICE_URL=$NEXT_PUBLIC_IMAGES_SERVICE_URL
ENV NEXT_PUBLIC_ADMIN_SERVICE_URL=$NEXT_PUBLIC_ADMIN_SERVICE_URL
ENV AUTH_SERVICE_INTERNAL_URL=$AUTH_SERVICE_INTERNAL_URL
ENV NEXT_PUBLIC_RECAPTCHA_SITE_KEY=$NEXT_PUBLIC_RECAPTCHA_SITE_KEY

# Set CI mode to skip type checking during build (we check it separately in CI)
ENV CI=true
ENV SKIP_ENV_VALIDATION=true

# Build the app
RUN npm run build

# Runtime stage
FROM base AS runner
WORKDIR /app
ENV NODE_ENV=production

# Create non-root user
RUN addgroup --system --gid 1001 nodejs && \
    adduser --system --uid 1001 nextjs && \
    chown -R nextjs:nodejs /app

# Copy only necessary files from builder
COPY --from=builder --chown=nextjs:nodejs /app/public ./public
COPY --from=builder --chown=nextjs:nodejs /app/.next/standalone ./
COPY --from=builder --chown=nextjs:nodejs /app/.next/static ./.next/static

# Switch to non-root user
USER nextjs

# Health check
HEALTHCHECK --interval=30s --timeout=3s --start-period=10s --retries=3 \
    CMD node -e "require('http').get('http://localhost:3000/', (r) => {process.exit(r.statusCode === 200 ? 0 : 1)})"

EXPOSE 3000
CMD ["node", "server.js"]